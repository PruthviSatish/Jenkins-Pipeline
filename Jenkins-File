pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Build the code using Maven
                echo 'Building the code using Maven'
            }
            post {
                always {
                    emailext (
                        to: "pruthvigowda.satish@gmail.com",
                        subject: "Pipeline Execution Status",
                        body: "Pipeline execution has completed.",
                        attachLog: true
                    )
                }
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Run unit tests using JUnit
                echo 'Running unit tests using JUnit'
                // Run integration tests using Selenium
                echo 'Running integration tests using Selenium'
            }
            post {
                always {
                    emailext (
                        to: "pruthvigowda.satish@gmail.com",
                        subject: "Unit and Integration Tests Status",
                        body: "Unit and integration tests have completed.",
                        attachLog: true
                    )
                }
            }
        }
        stage('Code Analysis') {
            steps {
                // Integrate SonarQube for code analysis
                echo 'Integrating SonarQube for code analysis'
            }
        }
        stage('Security Scan') {
            steps {
                // Perform security scan using OWASP ZAP
                echo 'Performing security scan using OWASP ZAP'
            }
            post {
                always {
                    emailext (
                        to: "pruthvigowda.satish@gmail.com",
                        subject: "Security Scan Status",
                        body: "Security scan has completed.",
                        attachLog: true
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploy application to AWS EC2 instance
                echo 'Deploying application to staging server (AWS EC2)'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on staging environment
                echo 'Running integration tests on staging environment'
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploy application to production server (AWS EC2)
                echo 'Deploying application to production server (AWS EC2)'
            }
        }
    }
}
